{"version":3,"sources":["Pages/Register.js","redux/reducers/actions.js","redux/reducers/actionCreators.js","Pages/Login.js","redux/selectors.js","components/Logged.js","components/Header.js","Pages/Needs/CreateNeedButton.js","Pages/Needs/Needs.js","Pages/AvailableResources.js","Pages/Needs/CreateNeed.js","App.js","serviceWorker.js","redux/reducers/jwt.js","redux/store.js","index.js"],"names":["Register","React","useState","open","setOpen","warning","setWarning","email","setEmail","firstName","setFirstname","lastName","setLastname","phone","setPhone","password","setPassword","handleClose","Button","color","onClick","Dialog","onClose","DialogTitle","id","DialogContent","Typography","Grid","container","spacing","style","marginTop","item","sm","TextField","autoFocus","label","type","fullWidth","value","onChange","e","target","InputLabelProps","shrink","variant","DialogActions","console","log","fetch","method","headers","body","JSON","stringify","then","res","ok","json","detail","setJwtToken","token","actions","payload","connect","undefined","dispatch","setToken","confirmpassword","isLogged","state","jwt","logout","useStyles","makeStyles","theme","title","flexGrow","withRouter","history","pathname","location","classes","currentTabIndex","test","AppBar","position","Toolbar","align","className","Tabs","centered","Tab","tabIndex","push","textAlign","marginBottom","data","i","v4","loremIpsum","units","count","generateRandomData","root","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","grey","Container","map","need","xs","key","Card","CardHeader","Avatar","aria-label","action","IconButton","subheader","CardContent","component","CardActions","disableSpacing","AvailableResources","margin","onSubmit","Breadcrumbs","Link","href","initialValues","ItemName","description","quantity","values","setSubmitting","Authorization","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","name","onBlur","multiline","rows","disabled","App","path","exact","Boolean","window","hostname","match","persistedState","serializedState","localStorage","getItem","parse","err","loadState","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","saveState","getState","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3f395ea.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Register() {\n  const [open, setOpen] = React.useState(false);\n\n  const [warning, setWarning] = useState(null);\n\n  /*const [email, setEmail] = useState(\"adriatik.dushica@gmail.com\");\n  const [firstName, setFirstname] = useState(\"Adriatik\");\n  const [lastName, setLastname] = useState(\"Dushica\");\n  const [phone, setPhone] = useState(\"2131212333\");\n  const [password, setPassword] = useState(\"test\");*/\n\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstname] = useState(\"\");\n  const [lastName, setLastname] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setFirstname(\"\");\n    setLastname(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setWarning(null);\n  };\n\n  const handleRegister = () => {\n    console.log(\"register!\");\n    fetch(\"/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password, firstName, lastName, phone }),\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        else res.json().then((json) => setWarning(json.detail));\n      })\n      .then((res) => {\n        handleClose();\n      });\n  };\n\n  return (\n    <div>\n      <Button color=\"inherit\" onClick={handleClickOpen}>\n        Sign in\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle id=\"form-dialog-title\">Sign in</DialogTitle>\n        <DialogContent>\n          {warning ? (\n            <Typography color={\"secondary\"}>{warning}</Typography>\n          ) : null}\n\n          <Grid container spacing={2} style={{ marginTop: \"20px\" }}>\n            <Grid item sm={6}>\n              <TextField\n                autoFocus\n                label=\"First name\"\n                type=\"email\"\n                fullWidth\n                value={firstName}\n                onChange={(e) => setFirstname(e.target.value)}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item sm={6}>\n              <TextField\n                label=\"Last name\"\n                type=\"email\"\n                fullWidth\n                value={lastName}\n                onChange={(e) => setLastname(e.target.value)}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n\n          <TextField\n            label=\"Phone number\"\n            fullWidth\n            value={phone}\n            style={{ marginTop: \"20px\" }}\n            onChange={(e) => setPhone(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n\n          <TextField\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            value={email}\n            style={{ marginTop: \"20px\" }}\n            onChange={(e) => setEmail(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            value={password}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            onChange={(e) => setPassword(e.target.value)}\n            style={{ marginTop: \"20px\" }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleRegister} color=\"primary\">\n            Sign in\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","export default {\n  SET_JWT_TOKEN: \"SET_JWT_TOKEN\",\n};\n","import actions from \"./actions\";\n\nexport const setJwtToken = (token, email) => ({\n  type: actions.SET_JWT_TOKEN,\n  payload: {\n    token,\n    email,\n  },\n});\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport { setJwtToken } from \"../redux/reducers/actionCreators\";\n\nconst Login = ({ setToken }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const [warning, setWarning] = useState(null);\n\n  const [email, setEmail] = useState(\"adriatik.dushica@gmail.com\");\n  const [password, setPassword] = useState(\"test\");\n\n  /*const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");*/\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setWarning(null);\n  };\n\n  const handleLogin = () => {\n    console.log(\"register!\");\n\n    fetch(\"/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        confirmpassword: password,\n        email: email,\n        password: password,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        else res.json().then((json) => setWarning(json.detail));\n      })\n      .then((res) => {\n        setToken(res, email);\n        handleClose();\n      });\n  };\n\n  return (\n    <div>\n      <Button color=\"inherit\" onClick={handleClickOpen}>\n        Log in\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle id=\"form-dialog-title\">Sign in</DialogTitle>\n        <DialogContent>\n          {warning ? (\n            <Typography color={\"secondary\"}>{warning}</Typography>\n          ) : null}\n\n          <TextField\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            value={email}\n            style={{ marginTop: \"20px\" }}\n            onChange={(e) => setEmail(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            value={password}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            onChange={(e) => setPassword(e.target.value)}\n            style={{ marginTop: \"20px\" }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleLogin} color=\"primary\">\n            Log in\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default connect(undefined, (dispatch) => ({\n  setToken: (token, email) => dispatch(setJwtToken(token, email)),\n}))(Login);\n","export const isLogged = (state) => state.jwt && !!state.jwt.token;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { setJwtToken } from \"../redux/reducers/actionCreators\";\n\nconst Logged = ({ email, logout }) => (\n  <>\n    <Typography>Hello, {email}</Typography>\n    <Button color=\"inherit\" onClick={logout}>\n      Log out\n    </Button>\n  </>\n);\n\nlet mapStateToProps = (state) => ({\n  email: state.jwt.email,\n});\n\nexport default connect(mapStateToProps, (dispatch) => ({\n  logout: () => dispatch(setJwtToken(null, null)),\n}))(Logged);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Register from \"../Pages/Register\";\nimport Login from \"../Pages/Login\";\nimport { isLogged } from \"../redux/selectors\";\nimport { connect } from \"react-redux\";\nimport Logged from \"./Logged\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = ({ isLogged, history, location: { pathname } }) => {\n  const classes = useStyles();\n\n  let currentTabIndex = -1;\n\n  if (pathname === \"/\") currentTabIndex = 0;\n  else if (/\\/needs.*/.test(pathname)) currentTabIndex = 1;\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" align=\"left\" className={classes.title}>\n          Cosoli\n        </Typography>\n        {isLogged ? (\n          <Logged />\n        ) : (\n          <>\n            <Login />\n            <Typography>or</Typography>\n            <Register />\n          </>\n        )}\n      </Toolbar>\n      <Tabs value={currentTabIndex} centered>\n        <Tab\n          tabIndex={0}\n          label=\"Available Resources\"\n          onClick={() => history.push(\"/\")}\n        />\n        <Tab\n          tabIndex={1}\n          label=\"needs\"\n          onClick={() => history.push(\"/needs\")}\n        />\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default connect((state) => ({\n  isLogged: isLogged(state),\n}))(withRouter(Header));\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CreateNeedButton = ({ history }) => (\n  <div style={{ textAlign: \"right\", marginBottom: \"20px\" }}>\n    <Button\n      color=\"primary\"\n      variant=\"outlined\"\n      onClick={() => history.push(\"/needs/create\")}\n    >\n      Request for need\n    </Button>\n  </div>\n);\n\nexport default withRouter(CreateNeedButton);\n","import React from \"react\";\nimport { loremIpsum } from \"lorem-ipsum\";\nimport { v4 } from \"uuid\";\nimport { Card } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Button from \"@material-ui/core/Button\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CreateNeedButton from \"./CreateNeedButton\";\nimport { connect } from \"react-redux\";\nimport { isLogged } from \"../../redux/selectors\";\n\nconst generateRandomData = () => {\n  let data = [];\n\n  for (let i = 0; i < 18; i++) {\n    data.push({\n      id: v4(),\n      title: loremIpsum({ units: \"words\", count: 2 }),\n      body: loremIpsum({ count: 2 }),\n    });\n  }\n\n  return data;\n};\n\nconst data = generateRandomData();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: grey[500],\n  },\n  container: {\n    marginTop: \"20px\",\n  },\n}));\n\nconst Needs = ({ isLogged }) => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      {isLogged ? <CreateNeedButton /> : null}\n      <Grid container spacing={3}>\n        {data.map((need) => (\n          <Grid item xs={4} key={need.id}>\n            <Card className={classes.root}>\n              <CardHeader\n                avatar={\n                  <Avatar\n                    aria-label=\"recipe\"\n                    className={classes.avatar}\n                  ></Avatar>\n                }\n                action={\n                  <IconButton aria-label=\"settings\">\n                    <MoreVertIcon />\n                  </IconButton>\n                }\n                title={need.title}\n                subheader=\"September 14, 2016\"\n              />\n              <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {need.body}\n                </Typography>\n              </CardContent>\n              <CardActions disableSpacing>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <Button>Show more</Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default connect((state) => ({\n  isLogged: isLogged(state),\n}))(Needs);\n","import React from \"react\";\n\nconst AvailableResources = () => <div>available resources</div>;\n\nexport default AvailableResources;\n","import React from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport { withRouter } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst CreateNeed = ({ history, token }) => {\n  const classes = useStyles();\n\n  return (\n    <Container style={{ marginTop: \"20px\" }}>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link color=\"inherit\" href=\"#\" onClick={() => history.push(\"/needs\")}>\n          Needs\n        </Link>\n        <Typography color=\"textPrimary\">Create</Typography>\n      </Breadcrumbs>\n\n      <Card align={\"left\"} style={{ margin: \"20px 0px\" }}>\n        <CardContent>\n          <Formik\n            initialValues={{ ItemName: \"\", description: \"\", quantity: 0 }}\n            onSubmit={(values, { setSubmitting }) => {\n              fetch(\"/me\", {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              })\n                .then((res) => res.json())\n                .then(console.log);\n              setSubmitting(false);\n              console.log(values);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              /* and other goodies */\n            }) => (\n              <form onSubmit={handleSubmit} className={classes.root}>\n                <Typography variant=\"h5\">Create a request for need</Typography>\n                <TextField\n                  label={\"Title\"}\n                  name={\"ItemName\"}\n                  fullWidth\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.ItemName}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <TextField\n                  label={\"Description\"}\n                  name={\"description\"}\n                  fullWidth\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.description}\n                  multiline\n                  rows={4}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <TextField\n                  type={\"number\"}\n                  label={\"Quantity\"}\n                  name={\"quantity\"}\n                  fullWidth\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.quantity}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Button\n                  color={\"primary\"}\n                  variant={\"outlined\"}\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    token: state.jwt.token,\n  }),\n  (dispatch) => ({\n    onSubmit: (token) => {},\n  })\n)(withRouter(CreateNeed));\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Needs from \"./Pages/Needs/Needs\";\nimport AvailableResources from \"./Pages/AvailableResources\";\nimport CreateNeed from \"./Pages/Needs/CreateNeed\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <AvailableResources />\n        </Route>\n        <Route path=\"/needs\" exact>\n          <Needs />\n        </Route>\n        <Route path=\"/needs/create\" exact>\n          <CreateNeed />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import actions from \"./actions\";\n\nfunction jwt(state = { token: \"\", email: \"\" }, action) {\n  switch (action.type) {\n    case actions.SET_JWT_TOKEN:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default jwt;\n","import { createStore, combineReducers } from \"redux\";\nimport jwt from \"./reducers/jwt\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nconst persistedState = loadState();\n\nconst store = createStore(\n  combineReducers({ jwt }),\n  persistedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/hack-zurich-codevscovid-frontend/\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}